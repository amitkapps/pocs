<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<display-name>CAS Scheduler Admin</display-name>

	<description>Application to administer batch jobs</description>

	<!--
		- Location of the XML file that defines the root application context.
		- Applied by ContextLoaderServlet.
		For security -             classpath:/config/spring/security-context.xml
	-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
            classpath:/config/spring/service-context.xml
			classpath:/config/spring/jms-context.xml
        </param-value>
	</context-param>


	<!--
		- Loads the root application context of this web app at startup, - by
		default from "/WEB-INF/applicationContext.xml". - Note that you need
		to fall back to Spring's ContextLoaderServlet for - J2EE servers that
		do not follow the Servlet 2.4 initialization order. - - Use
		WebApplicationContextUtils.getWebApplicationContext(servletContext) -
		to access it anywhere in the web application, outside of the
		framework. - - The root context is the parent of all servlet-specific
		contexts. - This means that its beans are automatically available in
		these child contexts, - both for getBean(name) calls and (external)
		bean references.
	-->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

<!--
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
-->

    <!--
        - Servlet that dispatches request to registered handlers (Controller
        implementations). - Has its own application context, by default
        defined in "{servlet-name}-servlet.xml", - i.e.
        "petclinic-servlet.xml". - - A web app can contain any number of such
        servlets. - Note that this web app has a shared root application
        context, serving as parent - of all DispatcherServlet contexts.
    -->
	<servlet>
		<servlet-name>SpringJms</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>


    <!--
         - Maps the petclinic dispatcher to "*.do". All handler mappings in -
         petclinic-servlet.xml will by default be applied to this subpath. - If
         a mapping isn't a /* subpath, the handler mappings are considered -
         relative to the web app root. - - NOTE: A single dispatcher can be
         mapped to multiple paths, like any servlet.
     -->
	<servlet-mapping>
		<servlet-name>SpringJms</servlet-name>
		<url-pattern>/rest/*</url-pattern>
	</servlet-mapping>


	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>


</web-app>
