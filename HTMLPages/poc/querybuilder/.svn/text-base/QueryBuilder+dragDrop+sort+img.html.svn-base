<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
	<head>
		<title>Tree View</title>
		<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">

		<style media="all" type="text/css">
			.droppablehover{
				background-color: #B5EF59 !important;
				color: red !important;
			}
			.transferEffect {
				border:1px solid #000000;
			}
			.groupHeader
			{
				line-height: 28px;
				background-color: #DAFF9F;
				border-top: 2px solid #B5EF59;
				color: #000;
				padding: 0 10px;
				cursor: pointer;
				font-weight: bold;
				font-size: 16px;
				height: 28px;
				/*position: relative;*/
			}
			.draggable{
				cursor: move;
			}
			.sortHelper{
				border: 3px dashed #666;
				width: auto !important;
			}
			.sortAscending{
				display:block;
				padding-left: 20px;
				background-image:url(../../resource/img/sortAscending.gif);
				background-repeat:no-repeat;
				background-align:middle left;				
			}
			.sortDescending{
				display:block;
				padding-left: 20px;
				background-image:url(../../resource/img/sortDescending.gif);
				background-repeat:no-repeat;
				background-align:middle left;				
			}
			
		</style>
		<link rel="stylesheet" href="../../resource/js/jquery/plugins/treeview/jquery.treeview.css" type="text/css"></link>
		<link rel="stylesheet" href="../../resource/js/jquery/plugins/treeview/red-treeview.css" type="text/css"></link>
		
		<!--<link rel="stylesheet" type="text/css" href="./styles.css">-->
		<script type="text/javascript" src="../../resource/js/jquery/core/jquery-1.1.4.js"></script>
		<script type="text/javascript" src="../../resource/js/jquery/plugins/interface/iutil.js"></script>	
		<script type="text/javascript" src="../../resource/js/jquery/plugins/interface/idrag.js"></script>
		<script type="text/javascript" src="../../resource/js/jquery/plugins/interface/idrop.js"></script>
		<script type="text/javascript" src="../../resource/js/jquery/plugins/interface/ifxtransfer.js"></script>
		<script type="text/javascript" src="../../resource/js/jquery/plugins/interface/isortables.js"></script>
		<script type="text/javascript" src="../../resource/js/jquery/plugins/interface/iautoscroller.js"></script>

		<script type="text/javascript">
		
			//The columns become draggable with ghosting
			//and revert = true
			function makeColumnsDraggable(){
 				$(".column")
 					//Style cols to look like 
 					.attr("style", "width: 110px; border: 2px solid black; border-style: outset; background: lightGray;")
 					.attr("title", "Draggable column")
 					//.wrap("<div class='canDrag'></div>")
 					.addClass("draggable")
 					;

				$('.column').Draggable({
					zIndex: 	1000,
					ghosting:	true,
					opacity: 	0.4,
					revert: true
				});

			}
			
			//
			function makeQueryTreeClauseNodesDroppable(){

				$('#columns,#filters,#groups,#sorts').Droppable({
					accept: 'column',
					hoverclass: 'droppablehover',
					ondrop:	function(drag){
							//alert('dropping ' + $(drag).text());
							var func = new acceptDraggableToQueryBuilderTree(drag, this);
							func.invoke();
					}
				});
				
			}
			
			function isDuplicateColAllowed(clauseId){
				return clauseId=='filters';	
			}
			
			function isSortableAllowed(clauseId){
				return clauseId!='filters';
			}
			
			function isSortClause(clauseId){
				return clauseId == 'sorts';
			}
			
			//Adds the dragged column to the droppable specifid by the clauseNode
			function addColumnToQueryBuilderTreeNode(clauseNode, column){
				var clauseId = $(clauseNode).attr('id');
				//var parentGroupClass = clauseId + 'Group'; 
				var clauseIdColumnItemClass = clauseId + "GroupItem draggable";
				var ul_jquery = $(clauseNode).next();
				var columnText = $(column).text();
				var newItemId = clauseId + columnText; 

				//dont add if it already exists
				if( !isDuplicateColAllowed(clauseId) && document.getElementById(newItemId) ){
					alert('Column "' + columnText + '" already in list.');
				}else{
					ul_jquery.append("<div>" +columnText+ "</div>")
						.children('div:last')
						.attr('id',newItemId)
						.addClass(clauseIdColumnItemClass)
						;
					newElem_jquery = ul_jquery.children('div:last');
					if(isSortClause(clauseId)){
						newElem_jquery.addClass('sortAscending');
						newElem_jquery.dblclick( function(){
													$(this).toggleClass('sortAscending');
													$(this).toggleClass('sortDescending');
												});
					}
					//add the new item to sortable only if its not a filter
					if(isSortableAllowed(clauseId))
						ul_jquery.SortableAddItem(newElem_jquery.get(0));
				}
			}
			
			//The Drag item will be added under the 
			//tree node identified by drop
			function acceptDraggableToQueryBuilderTree(drag, drop){
				this.drag = drag;
				this.drop = drop
				me = this;
				this.invoke = function(){
					//this generates the transfer to effect
					//driven by the transferer1 class
					$(drag).TransferTo({
						to:me.drop,
						className:'transferEffect', 
						duration: 400,
						complete: function(){
							//call back that will be executed after the transfer
							//effect finishes
							addColumnToQueryBuilderTreeNode(me.drop, me.drag);
						}
					});
				};
			}
			
			function makeSortable(jquerySortGroup, itemClass){
				jquerySortGroup.Sortable(
					{
						accept: itemClass,
						helperclass: 'sortHelper',
						activeclass : 	'sortableactive',
						hoverclass : 	'sortablehover',
						//handle: 'div.itemHeader',
						tolerance: 'pointer',
						onChange : function(ser)
						{
						},
						onStart : function()
						{
							$.iAutoscroller.start(this, document.getElementsByTagName('body'));
						},
						onStop : function()
						{
							$.iAutoscroller.stop();
						}
					}
				);
			}
			
		</script>

		
		<script type="text/javascript">
			//******************************
			//On Document Ready
			//******************************
			$(document).ready(function(){
				//toggle show hide
				$(".groupHeader").bind('click', toggleContent);
				//cols can be dragged
				makeColumnsDraggable();
				//query builder's clause nodes will accept columns
				makeQueryTreeClauseNodesDroppable();
				
				makeSortable($(".columnsGroup"), 'columnsGroupItem');				
				makeSortable($(".filtersGroup"), 'filtersGroupItem');
				makeSortable($(".sortsGroup"), 'sortsGroupItem');
				makeSortable($(".groupsGroup"), 'groupsGroupItem');
 				
				//makeQueryTreeClauseNodesDroppable(); 				

			});
			
			var toggleContent = function(e){
			
				var targetContent = $(this).next();
				//debug('targetContent[' + targetContent.text() +']');
				if (targetContent.css('display') == 'none') {
					targetContent.slideDown(300);
					$(this).children('span').text('-');
				} else {
					targetContent.slideUp(300);
					$(this).children('span').text('+');
				}
				return false;
			};			
			
		</script>
	
	</head>

	<body>
		<form method="post" action="" name="queryFilter">
			<table cellspacing="80px" valign="top">
			<tr>
			<td>
				<ul>
					<div id= "viewBuilder" class="groupHeader"><span>-</span>  VIEW BUILDER TREE</div>
					<ul>
						<div id="columns" class="groupHeader"><span>-</span>  COLUMNS</div>
						<ul id="columnsGroup" class="columnsGroup">
						</ul>
						<div  id="filters" class="groupHeader"><span>-</span>  FILTERS</div>
						<ul id="filtersGroup" class="filtersGroup"></ul>
						<div id="groups" class="groupHeader"><span>-</span>  GROUPS</div>
						<ul id="groupsGroup" class="groupsGroup"></ul>
						<div id="sorts" class="groupHeader"><span>-</span>  SORTS</div>
						<ul id="sortsGroup" class="sortsGroup"></ul>
					</ul>
				</ul>
			</td>
			<td align="left" valign="top">
				<table cellpadding="5px">
					<tr><td><div class="column">City Name</div></td></tr>
					<tr><td><div class="column">State Name</div></td></tr>
					<tr><td><div class="column">Zip Code</div></td></tr>
					<tr><td><div class="column">Update Date</div></td></tr>
				</table>
			</td>
			</tr>
			</table>
			
		</form>
	</body>
</html>