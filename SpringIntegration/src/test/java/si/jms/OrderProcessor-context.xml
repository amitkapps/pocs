<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-xml="http://www.springframework.org/schema/integration/xml"
       xmlns:oxm="http://www.springframework.org/schema/oxm"
       xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
       xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
       xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:int-mail="http://www.springframework.org/schema/integration/mail"
       xmlns:task="http://www.springframework.org/schema/task" xmlns:jms="http://www.springframework.org/schema/jms"
       xsi:schemaLocation="http://www.springframework.org/schema/integration/xml http://www.springframework.org/schema/integration/xml/spring-integration-xml-2.0.xsd
		http://www.springframework.org/schema/integration/mail http://www.springframework.org/schema/integration/mail/spring-integration-mail-2.0.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-2.0.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
		http://www.springframework.org/schema/integration/jms http://www.springframework.org/schema/integration/jms/spring-integration-jms-2.0.xsd
		http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream-2.0.xsd
		http://www.springframework.org/schema/integration/jdbc http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc-2.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd">

    <!--Orders xml received by this listener container -->
    <bean id="orderMessageProcessorListenerContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="destinationName" value="jms.queue.poc.orders"/>
        <property name="concurrentConsumers" value="1"/>
        <property name="maxMessagesPerTask" value="1"/>
        <property name="pubSubDomain" value="false"/>
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="transactionManager" ref="transactionManager"/>
        <property name="destinationResolver" ref="destinationResolver"/>
    </bean>

    <int-jms:inbound-gateway id="ordersInputGateway" container="orderMessageProcessorListenerContainer"
            acknowledge="client" request-channel="ordersForInvoicing" error-channel="orderError"
     />

    <int:channel id="ordersForInvoicing"/>

    <int-xml:xpath-header-enricher id="orderIdEnricher"
            input-channel="ordersForInvoicing" output-channel="orderIdEnriched">
        <int-xml:header name="orderId" xpath-expression="//@id"/>
    </int-xml:xpath-header-enricher>

    <int:channel id="orderIdEnriched"/>

    <int:service-activator id="orderInvoicingService" input-channel="orderIdEnriched"
                           ref="orderInvoiceService" method="invoice"
                           output-channel="ordersInvoiced"/>

    <int:channel id="ordersInvoiced"/>

    <int:service-activator id="orderLicensingService" input-channel="ordersInvoiced"
                           ref="orderLicenseService" method="license"
                           output-channel="ordersLicensed"/>

    <int:channel id="ordersLicensed"/>

    <int:channel id="orderError"/>

    <int:bridge input-channel="ordersLicensed" output-channel="ordersFinished"/>

    <int:transformer input-channel="orderError" output-channel="ordersFinished"
            expression="payload.failedMessage"/>

    <int:bridge input-channel="orderError" output-channel="ordersFinished"/>

    <int:channel id="ordersFinished"/>

    <!--
                        correlation-strategy="ordersCorrelator" correlation-strategy-method="correlate"
                        release-strategy="ordersReleaseStrategy" release-strategy-method="releaseChecker"

    -->

    <int:aggregator id="ordersAggregator" input-channel="ordersFinished"
                    correlation-strategy="ordersCorrelator" correlation-strategy-method="correlate"
                    output-channel="ordersFinishedOutput"
                    ref="ordersMessageAggregator" method="aggregate"
            />

    <!--<int:bridge input-channel="ordersFinished" output-channel="ordersFinishedOutput"/>-->

    <bean id="ordersFinishedOutput" class="si.extension.LoggingMessageNullChannel"/>
    <!--<bean id="ordersFinished" class="si.extension.LoggingMessageNullChannel"/>-->

    <!--
        <int-stream:stdout-channel-adapter id="ordersInvoicedLogger" channel="ordersInvoiced" append-newline="true" auto-startup="true"/>
        <int-stream:stderr-channel-adapter id="orderErrorLogger" channel="orderError" append-newline="true" auto-startup="true"/>
    -->

</beans>